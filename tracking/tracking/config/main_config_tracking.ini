[SENSOR_SETUP]
active_sensors = ["lidar", "lidar_cluster", "radar"]

[SENSOR_MODELS]
lidar = {"meas_vars": ["x", "y", "yaw"],
         "std_dev": [0.3, 0.3, 0.4],
         "bool_local": true,
         "max_delay_s": 0.3,
         "n_init_counter": 5,
         "n_add_counter": 2,
         "get_yaw": "measured",
         "is_fallback": false,
         "ros2_topic": "/mod_objects/DetectedObjectsLidar"}
lidar_cluster = {"meas_vars": ["x", "y", "yaw"],
         "std_dev": [0.3, 0.3, 0.35],
         "bool_local": true,
         "max_delay_s": 0.4,
         "get_yaw": "from_track",
         "is_fallback": true,
         "ros2_topic": "/mod_objects/DetectedObjectsClustering"}
radar = {"meas_vars": ["x", "y", "yaw", "v"],
         "std_dev": [3.0, 3.0, 0.35, 0.2],
         "bool_local": true,
         "max_delay_s": 0.2,
         "get_yaw": "from_track",
         "n_init_counter": 5,
         "n_add_counter": 2,
         "is_fallback": false,
         "individual_header": true,
         "ros2_topic": "/mod_objects/DetectedObjectsRadar"}
camera = {"meas_vars": ["x", "y", "yaw"],
         "std_dev": [0.01, 0.01, 0.35],
         "bool_local": true,
         "max_delay_s": 0.3,
         "get_yaw": "from_track",
         "is_fallback": true,
         "ros2_topic": "/mod_objects/DetectedObjectsCamera"}

[MISCS]
w_vehicle_m = 1.886
l_vehicle_m = 4.921
rear_ax_geoc_m = 1.74
attacker_modes = [0, 2, 4, 6, 7, 8]
track_file_IMS = "traj_ltpl_cl_IMS_GPS.csv"
pit_file_IMS = "traj_ltpl_cl_IMS_pitlane_GPS.csv"
track_file_LVMS = "traj_ltpl_cl_LVMS_GPS.csv"
track_file_LVMS_center = "traj_ltpl_cl_LVMS_center_GPS.csv"
track_file_LVMS_inner = "traj_ltpl_cl_LVMS_inner_GPS.csv"
track_file_LVMS_outer = "traj_ltpl_cl_LVMS_outer_GPS.csv"
pit_file_LVMS = "traj_ltpl_cl_LVMS_pitlane_GPS.csv"

[TRACKING]
state_vars = ["x", "y", "yaw", "v", "yawrate", "a"]
n_max_obsv = 350
add_ego_variables = true
ego_speed_factor = 0.8
filter_frequency = 100.0
publish_downsample_factor = 10
filter = {"P_init": [0.01, 0.01, 0.3, 4.0, 0.3, 1.0],
          "dx_std": 0.2,
          "dy_std": 0.2,
          "dyaw_std": 0.3,
          "dv_std": 1.0,
          "dyawrate_std": 0.5,
          "da_std": 3.0}
ego_lowpass = {"bool_lowpass": true,
               "tc_yaw": 0.9,
               "tc_yawrate": 0.4}
overlap_check = {"bool_overlap_check": true,
                 "overlap_dist_m": 5.1}
collision_check = {"collision_dist_m": -1.0,
                   "max_time_gap_s": 0.1,
                   "time_res_s": 0.01}
prediction = {"lap_wo_pred": -1.0,
              "cone_angle_deg": 0.0,
              "cone_offset_m": 1.0,
              "n_min_meas": 3,
              "step_size_s": 0.1,
              "n_steps_phys_pred": 5,
              "rail_pred_switch_idx": 2,
              "n_steps_rail_pred": 50,
              "bool_rail_accl": false,
              "bool_use_raceline": false,
              "obj_raceline": "default"}
bounds_check = {"bool_bounds_check": true,
                "bounds_buffer_m": -1.5,
                "bounds_buffer_inner_m": -0.5}
matching = {"max_match_dist_m": 5.0,
            "n_max_counter": 25,
            "last_time_seen_s": 2.0,
            "sr_threshhold_m": 60.0,
            "sr_sensors": ["lidar_cluster"],
            "lr_sensors": ["radar"]}
